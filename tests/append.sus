predicate Sll(loc x)
{
| x == 0 => { emp }
| not (x == 0) => { [x,2] **
                    x :=> head2 **
                    (x + 1) :=> nxt3 **
                    Sll(nxt3) }
}
predicate append(loc x1, loc x, loc x2)
{
| (x1 == 0) && (x == 0) => { x2 == 0 ; emp }
| (x1 == 0) && (not (x == 0)) => { [x2,2] **
                                   [x,2] **
                                   Sll(nxt21) **
                                   x :=> h **
                                   (x + 1) :=> nxt21 **
                                   x2 :=> h **
                                   (x2 + 1) :=> nxt21 }
| (not (x1 == 0)) && (x == 0) => { [x2,2] **
                                   [x1,2] **
                                   Sll(nxt38) **
                                   x1 :=> h **
                                   (x1 + 1) :=> nxt38 **
                                   x2 :=> h **
                                   (x2 + 1) :=> nxt38 }
| (not (x1 == 0)) && (not (x == 0)) => { [x2,2] **
                                         [x1,2] **
                                         [x,2] **
                                         Sll(nxt56) **
                                         x1 :=> h **
                                         (x1 + 1) :=> nxt55 **
                                         x :=> h2 **
                                         (x + 1) :=> nxt56 **
                                         append(nxt55, x, nxt8) **
                                         x2 :=> h **
                                         (x2 + 1) :=> nxt8 }
}
void append(loc x1, loc x, loc x2)
  {Sll(x1) ** Sll(x) ** x2 :=> x3}
  {append(x1, x, x4) ** x2 :=> x4}
{ ?? }