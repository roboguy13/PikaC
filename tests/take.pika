%generate take

Sll : layout[-x](List);
Sll Nil := emp;
Sll (Cons head tail) :=
  exists +nxt.
  x :-> head **
  (x+1) :-> nxt **
  Sll tail [nxt];

NatLayout : layout[-x](Nat);
NatLayout Z := emp;
NatLayout (S n) :=
  exists +nxt.
  x :-> nxt **
  NatLayout n [nxt];

take : NatLayout -> Sll -> Sll;
take Z Nil := Nil [Sll];
take (S n) Nil := Nil [Sll];
take Z (Cons h t) := Nil [Sll];
take (S n) (Cons h t) :=
  Cons h (take n t) [Sll];

%test "take" Sll:
  take (S (S (Z [NatLayout]) [NatLayout]) [NatLayout])
    (Cons 10 (Cons 20 (Cons 30 (Cons 40 (Nil [Sll]) [Sll]) [Sll]) [Sll]) [Sll]);

